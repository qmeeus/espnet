# network architecture
# encoder related
elayers: 12
eunits: 2048
# decoder related
dlayers: 6
dunits: 2048
# attention related
adim: 256
aheads: 4

# hybrid CTC/attention
mtlalpha: 0.3

# label smoothing
lsm-weight: 0.1

# minibatch related
batch-size: 64 
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 150 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 8
grad-clip: 5
patience: 0
epochs: 300
dropout-rate: 0.1

# transformer specific setting
backend: pytorch
model-module: "espnet.nets.pytorch_backend.e2e_sti_transformer:E2E"
transformer-input-layer: conv2d     # encoder architecture type
transformer-lr: 10.0
transformer-warmup-steps: 25000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch
num-save-attention: 0
num-save-ctc: 0

# pretrained network
enc-init: exp/CGN_train_pytorch_train_pytorch_transformer_lr5.0_ag8.v2_specaug/results/model.loss.best
enc-init-mods: encoder.,ctc.
freeze-mods: encoder.,ctc.

# teacher/student setting
teacher-model: /esat/spchtemp/scratch/qmeeus/repos/transformers/examples/language-modeling/output/bertje_wwm/checkpoint-32000
mlm-probability: 0.5
wwm: true
alpha_mlm: 0.5
alpha_ce: 0.4
alpha_cos: 0.1
