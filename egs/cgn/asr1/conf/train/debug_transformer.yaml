# network architecture
# encoder related
elayers: 6
eunits: 512 
# decoder related
dlayers: 3
dunits: 512
# attention related
adim: 256 
aheads: 4

# hybrid CTC/attention
mtlalpha: 0.4
alpha-scheduler:                                                                                                                                                                                                    
    - 0.6                                                                                                                                                                                                           
    - 0.4                                                                                                                                                                                                           
    - 8                                                                                                                                                                                                           
    - 10
    - 20    

# minibatch related
batch-size: 16 
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 50 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 4
grad-clip: 5
patience: 5
epochs: 100
dropout-rate: 0.2

# transformer specific setting
backend: pytorch
model-class: "espnet.nets.pytorch_backend.e2e_asr_transformer:E2E"
transformer-input-layer: conv2d     # encoder architecture type
transformer-lr: 10.0
transformer-warmup-steps: 25000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch
decoder-mode: maskctc

report-cer: true 
report-wer: false 

