# network architecture
# encoder related
elayers: 6 
eunits: 512 
# decoder related
dlayers: 3
dunits: 512
# attention related
adim: 128
aheads: 4

# minibatch related
batch-size: 32 
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 50 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 4
grad-clip: 5
patience: 3
epochs: 100
dropout-rate: 0.1

# transformer specific setting
backend: pytorch
model-class: "espnet.nets.pytorch_backend.e2e_w2v_transformer:E2E"
transformer-input-layer: conv2d     # encoder architecture type
transformer-lr: 10.0
transformer-warmup-steps: 25000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch

report-cer: false
report-wer: false 

