# network architecture
# encoder related
elayers: 12
eunits: 2048
# decoder related
dlayers: 6
dunits: 2048
# attention related
adim: 512 
aheads: 8

# hybrid CTC/attention
mtlalpha: 0.4
alpha-scheduler:
    - 0.4
    - 0.2
    - 4 
    - 10
    - 40

# minibatch related
batch-size: 8 
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 50 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: -1 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 8
grad-clip: 5
patience: 5 
epochs: 100
dropout-rate: 0.1
sampling-probability: 0.0

# transformer specific setting
backend: pytorch
model-class: "espnet.nets.pytorch_backend.e2e_asr_transformer:E2E"
transformer-input-layer: conv2d     # encoder architecture type
transformer-lr: 10.0
transformer-warmup-steps: 25000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch

report-cer: true
report-wer: true 

